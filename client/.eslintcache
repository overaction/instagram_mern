[{"D:\\Project\\react\\instagram_mern\\client\\src\\index.js":"1","D:\\Project\\react\\instagram_mern\\client\\src\\App.js":"2","D:\\Project\\react\\instagram_mern\\client\\src\\components\\Navbar.js":"3","D:\\Project\\react\\instagram_mern\\client\\src\\components\\screens\\Home.js":"4","D:\\Project\\react\\instagram_mern\\client\\src\\components\\screens\\Profile.js":"5","D:\\Project\\react\\instagram_mern\\client\\src\\components\\screens\\Signup.js":"6","D:\\Project\\react\\instagram_mern\\client\\src\\components\\screens\\SignIn.js":"7","D:\\Project\\react\\instagram_mern\\client\\src\\components\\screens\\CreatePost.js":"8","D:\\Project\\react\\instagram_mern\\client\\src\\reducers\\userReducer.js":"9","D:\\Project\\react\\instagram_mern\\client\\src\\components\\screens\\UserProfile.js":"10","D:\\Project\\react\\instagram_mern\\client\\src\\loading.js":"11","D:\\Project\\react\\instagram_mern\\client\\src\\Loading.js":"12","D:\\Project\\react\\instagram_mern\\client\\src\\components\\screens\\SubscribesUserPosts.js":"13"},{"size":219,"mtime":1607052513826,"results":"14","hashOfConfig":"15"},{"size":2631,"mtime":1607607267022,"results":"16","hashOfConfig":"15"},{"size":1944,"mtime":1607954364276,"results":"17","hashOfConfig":"15"},{"size":11862,"mtime":1607955736477,"results":"18","hashOfConfig":"15"},{"size":3401,"mtime":1607738610879,"results":"19","hashOfConfig":"15"},{"size":3789,"mtime":1607613708602,"results":"20","hashOfConfig":"15"},{"size":2466,"mtime":1607954905203,"results":"21","hashOfConfig":"15"},{"size":3037,"mtime":1607846765533,"results":"22","hashOfConfig":"15"},{"size":600,"mtime":1607693781613,"results":"23","hashOfConfig":"15"},{"size":5234,"mtime":1607613280299,"results":"24","hashOfConfig":"15"},{"size":173,"mtime":1607402871938,"results":"25","hashOfConfig":"15"},{"size":263,"mtime":1607405294674,"results":"26","hashOfConfig":"15"},{"size":7707,"mtime":1607609336577,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"10a74bc",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},"D:\\Project\\react\\instagram_mern\\client\\src\\index.js",[],["61","62"],"D:\\Project\\react\\instagram_mern\\client\\src\\App.js",["63","64"],"import React, { createContext, useContext, useEffect, useReducer } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\nimport Home from \"./components/screens/Home\";\nimport SignIn from \"./components/screens/SignIn\";\nimport Profile from \"./components/screens/Profile\";\nimport Signup from \"./components/screens/Signup\";\nimport CreatePost from \"./components/screens/CreatePost\";\n\nimport { reducer, initialState } from \"./reducers/userReducer\";\nimport UserProfile from \"./components/screens/UserProfile\";\n\nimport SubscribesUserPosts from './components/screens/SubscribesUserPosts';\n\nexport const userContext = createContext();\n\nconst Routing = () => {\n    const history = useHistory();\n    const { state, dispatch } = useContext(userContext);\n    // 만약 로그인 정보가 남아있다면 홈페이지로 이동 / 아니라면 로그인 페이지로 이동\n    // 만약 localhost:3000/profile 처럼 홈페이지에 주소를 입력해도 useEffect에 의해 아래 logic이 먼저 실행되기 때문에 '/'로 이동한다\n    // 그러나 이것은 refresh 될 때만 적용되고, Link에 의해 refreshing 되지 않도록 되어있기 때문에 완벽하진 않다\n    // 그래서 Navbar.js의 Link에 조건을 달아주었다\n    useEffect(() => {\n        const user = JSON.parse(localStorage.getItem(\"svuser\"));\n        // user의 정보를 저장\n        if (user) {\n            dispatch({ type: \"USER\", payload: user });\n        } else {\n            history.push(\"/signin\");\n        }\n    }, [history]);\n    return (\n        <Switch>\n            <Route exact path=\"/\">\n                <Home />\n            </Route>\n            <Route path=\"/signin\">\n                <SignIn />\n            </Route>\n            <Route path=\"/signup\">\n                <Signup />\n            </Route>\n            <Route exact path=\"/profile\">\n                <Profile />\n            </Route>\n            <Route path=\"/create\">\n                <CreatePost />\n            </Route>\n            <Route path=\"/profile/:userId\">\n                <UserProfile />\n            </Route>\n            <Route path=\"/myfollowerspost\">\n                <SubscribesUserPosts />\n            </Route>\n        </Switch>\n    );\n};\n\nfunction App() {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    return (\n        <userContext.Provider value={{ state, dispatch }}>\n            <BrowserRouter>\n                <Navbar />\n                <Routing />\n            </BrowserRouter>\n        </userContext.Provider>\n    );\n}\n\nexport default App;\n","D:\\Project\\react\\instagram_mern\\client\\src\\components\\Navbar.js",[],"D:\\Project\\react\\instagram_mern\\client\\src\\components\\screens\\Home.js",["65","66","67","68"],"D:\\Project\\react\\instagram_mern\\client\\src\\components\\screens\\Profile.js",["69","70"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { userContext } from '../../App';\r\nimport './Profile.css'\r\nconst Profile = () => {\r\n    const [myposts, setMyposts] = useState([]);\r\n    const {state,dispatch} = useContext(userContext);\r\n    const [image, setImage] = useState('');\r\n    const fileInput = useRef();\r\n    useEffect(() => {\r\n        fetch('/mypost', {\r\n            method: 'get',\r\n            headers: {\r\n                'Authorization': 'Bearer '+localStorage.getItem('jwt')\r\n            },\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            setMyposts(result.mypost);\r\n            console.log(result);\r\n        })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if(image) {\r\n            const data = new FormData()\r\n            data.append(\"file\", image);\r\n            data.append(\"upload_preset\",\"insta-mern\"); // cloudinary upload preset 이름\r\n            data.append(\"cloud_name\", \"kmc\"); // cloudinary 내 닉네임\r\n            fetch(\"https://api.cloudinary.com/v1_1/kmc/image/upload\", {\r\n                method: \"post\",\r\n                body: data,\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                localStorage.setItem('svuser',JSON.stringify({...state, pic :data.url}));\r\n                dispatch({type:\"UPDATE_PROFILE\",payload: {\r\n                    pic: data.url\r\n                }})\r\n                fetch('/updatepic', {\r\n                    method: 'put',\r\n                    headers: {\r\n                        'Authorization': 'Bearer '+localStorage.getItem('jwt'),\r\n                        'Content-type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        pic: data.url\r\n                    })\r\n                })\r\n                .then(res => res.json())\r\n                .then(result => console.log(result))\r\n            })\r\n            .catch(err => console.log(err))\r\n        }\r\n    },[image]);\r\n\r\n    const uploadProfileImg = (file) => {\r\n        setImage(file);\r\n    }\r\n\r\n    return (\r\n    \r\n        <div className=\"profileContainer\">\r\n            <div className=\"profile-mine\">\r\n                <input type=\"file\" style={{display: \"none\"}} onChange={(e) => uploadProfileImg(e.target.files[0])} ref={fileInput}/>\r\n                <img className=\"myimage\" onClick={() => {\r\n                    fileInput.current.click()\r\n                }}\r\n                    src={state ? state.pic : 'loading'}\r\n                />\r\n                <div>\r\n                    <h4>{state ? state.name : \"Loading\"}</h4>\r\n                    <h5>{state ? state.email : \"Loading\"}</h5>\r\n                    <div style={{display:\"flex\", justifyContent:\"space-between\", width: \"108%\"}}>\r\n                        <h6>{myposts.length} posts</h6>\r\n                        <h6>{state ? state.followers.length : 0} followers</h6>\r\n                        <h6>{state ? state.followings.length: 0} followings</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"gallery\">\r\n                {myposts.map((item) => {\r\n                    return (\r\n                        <img className=\"gallery-item\" key={item._id} src={item.photo} alt={item.title} />\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\Project\\react\\instagram_mern\\client\\src\\components\\screens\\Signup.js",["71","72","73"],"import React, { useEffect, useState } from \"react\";\r\nimport './Sign.css'\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport M from 'materialize-css';\r\nconst SignUp = () => {\r\n    const history = useHistory();\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [url, setUrl] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        if(url) {\r\n            uploadFields();\r\n        }\r\n    },[url]);\r\n\r\n    const uploadPic = async () => {\r\n        const data = new FormData()\r\n        data.append(\"file\", image);\r\n        data.append(\"upload_preset\",\"insta-mern\"); // cloudinary upload preset 이름\r\n        data.append(\"cloud_name\", \"kmc\"); // cloudinary 내 닉네임\r\n        await fetch(\"https://api.cloudinary.com/v1_1/kmc/image/upload\", {\r\n            method: \"post\",\r\n            body: data,\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            // url이 업데이트 되었을 때 usEffect를 통해 posting 해준다\r\n            setUrl(data.url);\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    const uploadFields = async () => {\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            return M.toast({html: \"invalid email\", classes:\"#c62828 red darken-3\"})\r\n        }\r\n        await fetch('/signup', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                pic: url\r\n            })\r\n        }).then(res => res.json())\r\n        .then((data) => {\r\n            if(data.error) {\r\n                M.toast({html: data.error, classes:\"#c62828 red darken-3\"})\r\n            }\r\n            else {\r\n                M.toast({html: data.message, classes:\"#43a047 green darken-1\"});\r\n                history.push('/signin');\r\n            }\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    const PostData = async () => {\r\n        if(image) {\r\n            uploadPic()\r\n        }\r\n        else {\r\n            uploadFields();\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card\">\r\n                <h2>Instagram</h2>\r\n                <input type=\"text\" placeholder=\"name\" value={name} onChange={(e) => setName(e.target.value)}/>\r\n                <input type=\"text\" placeholder=\"email\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n                <input type=\"password\" placeholder=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                <div className=\"file-field input-field\">\r\n                    <div className=\"btn #64b5f6 blue darken-1\">\r\n                        <span>Upload Image</span>\r\n                        <input type=\"file\" onChange={(e) => setImage(e.target.files[0])}/>\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                        <input className=\"file-path validate\" type=\"text\" />\r\n                    </div>\r\n                </div>\r\n                <button\r\n                    className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                    onClick={() => PostData()}\r\n                >\r\n                    SignUp\r\n                </button>\r\n                <h5>\r\n                    <Link to=\"/signin\">Already have an account ?</Link>\r\n                </h5>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","D:\\Project\\react\\instagram_mern\\client\\src\\components\\screens\\SignIn.js",["74","75"],"D:\\Project\\react\\instagram_mern\\client\\src\\components\\screens\\CreatePost.js",["76"],"import React, { useEffect, useState } from 'react'\r\nimport './CreatePost.css';\r\nimport M from 'materialize-css';\r\nimport { useHistory } from 'react-router-dom';\r\nconst CreatePost = () => {\r\n    const history = useHistory();\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [url, setUrl] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await fetch('/createpost', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'Authorization': 'Bearer '+localStorage.getItem('jwt')\r\n                },\r\n                body: JSON.stringify({\r\n                    title,\r\n                    body,\r\n                    pic:url, \r\n                })\r\n            }).then(res => res.json())\r\n            .then((data) => {\r\n                console.log(data)\r\n                if(data.error) {\r\n                    M.toast({html: data.error, classes:\"#c62828 red darken-3\"})\r\n                }\r\n                else {\r\n                    M.toast({html: \"posted successfully\", classes:\"#43a047 green darken-1\"});\r\n                    history.push('/');\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n        if(url) {\r\n            fetchData();\r\n        }\r\n    },[url])\r\n\r\n    const postDetails = async () => {\r\n        const data = new FormData()\r\n        data.append(\"file\", image);\r\n        data.append(\"upload_preset\",\"insta-mern\"); // cloudinary upload preset 이름\r\n        data.append(\"cloud_name\", \"kmc\"); // cloudinary 내 닉네임\r\n        await fetch(\"https://api.cloudinary.com/v1_1/kmc/image/upload\", {\r\n            method: \"post\",\r\n            body: data,\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            // url이 업데이트 되었을 때 usEffect를 통해 posting 해준다\r\n            setUrl(data.url);\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div className=\"createPost card input-filed\">\r\n            <input type=\"text\" placeholder=\"title\" value={title} onChange={(e) => setTitle(e.target.value)}/>\r\n            <input type=\"text\" placeholder=\"body\" value={body} onChange={(e) => setBody(e.target.value)}/>\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn #64b5f6 blue darken-1\">\r\n                    <span>Upload Image</span>\r\n                    <input type=\"file\" onChange={(e) => setImage(e.target.files[0])}/>\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={() => postDetails()}>\r\n                Submit Post\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreatePost\r\n","D:\\Project\\react\\instagram_mern\\client\\src\\reducers\\userReducer.js",[],"D:\\Project\\react\\instagram_mern\\client\\src\\components\\screens\\UserProfile.js",["77","78"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { userContext } from '../../App';\r\nimport './Profile.css'\r\nimport {useParams} from 'react-router-dom';\r\nimport Loading from '../../Loading';\r\nconst Profile = () => {\r\n    const [userProfile, setProfile] = useState(null);\r\n    const {state,dispatch} = useContext(userContext);\r\n    const {userId} = useParams();\r\n    const [showFollow, setShowFollow] = useState(state ? !state.followings.includes(userId) : true);\r\n    useEffect(() => {\r\n        fetch(`/user/${userId}`, {\r\n            method: 'get',\r\n            headers: {\r\n                'Authorization': 'Bearer '+localStorage.getItem('jwt')\r\n            },\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            setProfile(result);\r\n        })\r\n    },[])\r\n\r\n    const followUser = () => {\r\n        fetch(\"/follow\", {\r\n            method: 'put',\r\n            headers: {\r\n                \"Content-type\": 'application/json',\r\n                'Authorization': 'Bearer '+localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                followId: userId           \r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            console.log(result.myinfo);\r\n            // 상태 업데이트\r\n            dispatch({type:\"UPDATE\",payload: {\r\n                followings: result.myinfo.followings,\r\n                followers: result.myinfo.followers,\r\n            }})\r\n            // 로컬 업데이트\r\n            localStorage.setItem(\"svuser\",JSON.stringify(result.myinfo));\r\n            // profile 업데이트\r\n            setProfile((prev) => {\r\n                return {\r\n                    ...prev,\r\n                    user: {\r\n                        ...prev.user,\r\n                        followers: [...prev.user.followers, result.otheruser._id]\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        setShowFollow(false);\r\n    }\r\n\r\n    const unfollowUser = () => {\r\n        fetch('/unfollow', {\r\n            method: 'put',\r\n            headers: {\r\n                \"Content-type\": 'application/json',\r\n                'Authorization': 'Bearer '+localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                unfollowId: userId,\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            console.log(result);\r\n            dispatch({type:\"UPDATE\",payload: {\r\n                followings: result.result2.followings,\r\n                followers: result.result2.followers,\r\n            }})\r\n            localStorage.setItem('svuser',JSON.stringify(result.result2));\r\n            setProfile(prev => {\r\n                const newfollowers = result.result2.followers.filter(item => item._id !== userId)\r\n                return {\r\n                    ...prev,\r\n                    user: {\r\n                        ...prev.user,\r\n                        followers: newfollowers\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        setShowFollow(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!userProfile ? \r\n            <Loading /> \r\n            : \r\n                <div className=\"profileContainer\">\r\n                    <div className=\"profile-mine\">\r\n                        <img className=\"myimage\"\r\n                            src={userProfile.user.pic}\r\n                        />\r\n                        <div>\r\n                            <h4>{userProfile.user.name}</h4>\r\n                            {showFollow\r\n                            ?\r\n                            <button\r\n                                className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                                onClick={() => followUser()}\r\n                            >\r\n                                Follow\r\n                            </button>\r\n                            :\r\n                            <button\r\n                                className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                                onClick={() => unfollowUser()}\r\n                            >\r\n                                unFollow\r\n                            </button>\r\n                            }\r\n                            <h5>{userProfile.user.email}</h5>\r\n                            <div style={{display:\"flex\", justifyContent:\"space-between\", width: \"108%\"}}>\r\n                                <h6>{userProfile.posts.length} posts</h6>\r\n                                <h6>{userProfile.user.followers.length} followers</h6>\r\n                                <h6>{userProfile.user.followings.length} followings</h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"gallery\">\r\n                        {userProfile.posts.map((item) => {\r\n                            return (\r\n                                <img className=\"gallery-item\" key={item._id} src={item.photo} alt={item.title} />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\Project\\react\\instagram_mern\\client\\src\\loading.js",["79"],"D:\\Project\\react\\instagram_mern\\client\\src\\Loading.js",[],"D:\\Project\\react\\instagram_mern\\client\\src\\components\\screens\\SubscribesUserPosts.js",["80","81","82"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { userContext } from '../../App';\r\nimport './Home.css';\r\nconst Home = () => {\r\n    const history = useHistory();\r\n    const [posts,setPosts] = useState([]);\r\n    const {state,dispatch} = useContext(userContext);\r\n\r\n    useEffect(() => {\r\n        fetch('/allfollowposts', {\r\n            method: 'get',\r\n            headers: {\r\n                'Authorization': 'Bearer '+localStorage.getItem('jwt')\r\n            },\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            console.log(`allposts`)\r\n            console.log(result);\r\n            if(result.error) {\r\n                history.push('/signin')\r\n            }\r\n            else {\r\n                setPosts(result.posts);\r\n            }\r\n        })\r\n    },[]);\r\n\r\n    const likePost = (id) => {\r\n        fetch('/like', {\r\n            method: 'put',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer '+localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            const newData = posts.map(item => {\r\n                // 만약 기존 posts의 id === 좋아요 누른 post의 id 이라면\r\n                // 좋아요 누른 post로 교체\r\n                if(item._id === result._id) {\r\n                    return result;\r\n                }\r\n                // 아니라면 기존값 그대로 리턴\r\n                else {\r\n                    return item;\r\n                }\r\n            })\r\n            setPosts(newData);\r\n        }).catch(err => console.log(err));\r\n    }\r\n    const unlikePost = (id) => {\r\n        fetch('/unlike', {\r\n            method: 'put',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer '+localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            console.log('dislike')\r\n            console.log(result)\r\n            const newData = posts.map(item => {\r\n                if(item._id === result._id) {\r\n                    return result;\r\n                }\r\n                else {\r\n                    return item;\r\n                }\r\n            })\r\n            setPosts(newData);\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    const makeComment = (text, postId) => {\r\n        fetch('/comment', {\r\n            method: 'put',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer '+localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                text: text,\r\n                postId: postId,                \r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            const newData = posts.map((item) => {\r\n                if(item._id === result._id) {\r\n                    return result\r\n                }\r\n                else {\r\n                    return item\r\n                }\r\n            })\r\n            setPosts(newData);\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    const deletePost = (postId) => {\r\n        fetch(`/deletepost/${postId}`, {\r\n            method: 'delete',\r\n            headers: {\r\n                'Authorization': 'Bearer '+localStorage.getItem('jwt')\r\n            },\r\n        })\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            console.log('deleted')\r\n            console.log(result);\r\n            // 삭제한 post의 id를 통해 해당 post는 filter 함\r\n            const newData = posts.filter(item => {\r\n                return item._id !== result._id\r\n            })\r\n            setPosts(newData);\r\n        })\r\n    }\r\n\r\n    const deleteComment = (postId,commentId) => {\r\n        fetch(`/deletecomment/${postId}/${commentId}`, {\r\n            method: 'delete',\r\n            headers: {\r\n                'Authorization': 'Bearer '+localStorage.getItem('jwt')\r\n            },\r\n        })\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            console.log(`delete comment`);\r\n            console.log(result);\r\n            const newData = posts.map(item => {\r\n                if(item._id === result._id)\r\n                    return result;\r\n                else\r\n                    return item;\r\n            })\r\n            setPosts(newData);\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {posts.map((item) => {\r\n                return (\r\n                <div className=\"card home-card\" key={item._id}>\r\n                    <div className=\"card-tool\">\r\n                        <h5 className=\"card-name\">\r\n                            {item.postedBy._id === state._id ?\r\n                            <Link to={\"/profile/\"}>{item.postedBy.name}</Link>\r\n                            :\r\n                            <Link to={\"/profile/\"+item.postedBy._id}>{item.postedBy.name}</Link>\r\n                            }\r\n                        </h5>\r\n                        {item.postedBy._id === state._id \r\n                        ? \r\n                        <i className=\"material-icons\" style={{float:'right'}} onClick={() => deletePost(item._id)}>delete</i> \r\n                        : \r\n                        ''}\r\n                    </div>\r\n                    <div className=\"card-image\">\r\n                        <img src={item.photo} />\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        <i className=\"material-icons\">favorite</i>\r\n                        {item.likes.includes(state._id)\r\n                        ? <i className=\"material-icons\" onClick={() => unlikePost(item._id)}>thumb_down</i>\r\n                        :  <i className=\"material-icons\" onClick={() => likePost(item._id)}>thumb_up</i>\r\n                        }\r\n                        <h6>{item.likes.length} likes</h6>\r\n                        <h6>{item.title}</h6>\r\n                        <p>{item.body}</p>\r\n                        {\r\n                            item.comments.map(comment => {\r\n                                return (\r\n                                    <h6 key={comment._id}>\r\n                                        <span className=\"card-commentby\">{comment.commentBy.name}</span>\r\n                                        {comment.text}\r\n                                        {comment.commentBy._id === state._id\r\n                                        ?\r\n                                        <i className=\"material-icons\" style={{float:'right'}} onClick={() => deleteComment(item._id,comment._id)}>delete</i>\r\n                                        :\r\n                                        ''\r\n                                        }\r\n                                    </h6>\r\n                                )\r\n                            })\r\n                        }\r\n                        <form onSubmit={(e) => {\r\n                            e.preventDefault();\r\n                            makeComment(e.target.comment.value, item._id)\r\n                            e.target.comment.value = '';\r\n                        }}>\r\n                            <input name=\"comment\" type=\"text\" placeholder=\"add a comment\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home\r\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":20,"column":13,"nodeType":"89","messageId":"90","endLine":20,"endColumn":18},{"ruleId":"91","severity":1,"message":"92","line":33,"column":8,"nodeType":"93","endLine":33,"endColumn":17,"suggestions":"94"},{"ruleId":"87","severity":1,"message":"95","line":10,"column":18,"nodeType":"89","messageId":"90","endLine":10,"endColumn":26},{"ruleId":"91","severity":1,"message":"96","line":39,"column":7,"nodeType":"93","endLine":39,"endColumn":9,"suggestions":"97"},{"ruleId":"91","severity":1,"message":"98","line":43,"column":7,"nodeType":"93","endLine":43,"endColumn":12,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":237,"column":29,"nodeType":"102","endLine":237,"endColumn":53},{"ruleId":"91","severity":1,"message":"103","line":53,"column":7,"nodeType":"93","endLine":53,"endColumn":14,"suggestions":"104"},{"ruleId":"100","severity":1,"message":"101","line":64,"column":17,"nodeType":"102","endLine":68,"endColumn":19},{"ruleId":"91","severity":1,"message":"105","line":17,"column":7,"nodeType":"93","endLine":17,"endColumn":12,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":37,"column":23,"nodeType":"109","messageId":"110","endLine":37,"endColumn":24,"suggestions":"111"},{"ruleId":"107","severity":1,"message":"108","line":37,"column":48,"nodeType":"109","messageId":"110","endLine":37,"endColumn":49,"suggestions":"112"},{"ruleId":"107","severity":1,"message":"108","line":14,"column":23,"nodeType":"109","messageId":"110","endLine":14,"endColumn":24,"suggestions":"113"},{"ruleId":"107","severity":1,"message":"108","line":14,"column":48,"nodeType":"109","messageId":"110","endLine":14,"endColumn":49,"suggestions":"114"},{"ruleId":"91","severity":1,"message":"115","line":41,"column":7,"nodeType":"93","endLine":41,"endColumn":12,"suggestions":"116"},{"ruleId":"91","severity":1,"message":"117","line":21,"column":7,"nodeType":"93","endLine":21,"endColumn":9,"suggestions":"118"},{"ruleId":"100","severity":1,"message":"101","line":98,"column":25,"nodeType":"102","endLine":100,"endColumn":27},{"ruleId":"100","severity":1,"message":"101","line":5,"column":13,"nodeType":"102","endLine":5,"endColumn":38},{"ruleId":"87","severity":1,"message":"95","line":8,"column":18,"nodeType":"89","messageId":"90","endLine":8,"endColumn":26},{"ruleId":"91","severity":1,"message":"96","line":27,"column":7,"nodeType":"93","endLine":27,"endColumn":9,"suggestions":"119"},{"ruleId":"100","severity":1,"message":"101","line":167,"column":25,"nodeType":"102","endLine":167,"endColumn":49},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["122"],"'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["123"],"React Hook useEffect has missing dependencies: 'clickedPost' and 'updatePost'. Either include them or remove the dependency array.",["124"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["125"],"React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["126"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["127","128"],["129","130"],["131","132"],["133","134"],"React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["135"],"React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["136"],["137"],"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"messageId":"148","fix":"149","desc":"150"},{"messageId":"151","fix":"152","desc":"153"},{"messageId":"148","fix":"154","desc":"150"},{"messageId":"151","fix":"155","desc":"153"},{"messageId":"148","fix":"156","desc":"150"},{"messageId":"151","fix":"157","desc":"153"},{"messageId":"148","fix":"158","desc":"150"},{"messageId":"151","fix":"159","desc":"153"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"140","fix":"164"},"Update the dependencies array to be: [dispatch, history]",{"range":"165","text":"166"},"Update the dependencies array to be: [history]",{"range":"167","text":"168"},"Update the dependencies array to be: [clickedPost, updatePost, url]",{"range":"169","text":"170"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"171","text":"172"},"Update the dependencies array to be: [uploadFields, url]",{"range":"173","text":"174"},"removeEscape",{"range":"175","text":"176"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"177","text":"178"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"179","text":"176"},{"range":"180","text":"178"},{"range":"181","text":"176"},{"range":"182","text":"178"},{"range":"183","text":"176"},{"range":"184","text":"178"},"Update the dependencies array to be: [body, history, title, url]",{"range":"185","text":"186"},"Update the dependencies array to be: [userId]",{"range":"187","text":"188"},{"range":"189","text":"168"},[1361,1370],"[dispatch, history]",[1312,1314],"[history]",[1401,1406],"[clickedPost, updatePost, url]",[1977,1984],"[dispatch, image, state]",[541,546],"[uploadFields, url]",[1221,1222],"",[1221,1221],"\\",[1246,1247],[1246,1246],[471,472],[471,471],[496,497],[496,496],[1420,1425],"[body, history, title, url]",[799,801],"[userId]",[855,857]]